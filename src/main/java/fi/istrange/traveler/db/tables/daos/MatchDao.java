/*
 * This file is generated by jOOQ.
*/
package fi.istrange.traveler.db.tables.daos;


import fi.istrange.traveler.db.tables.Match;
import fi.istrange.traveler.db.tables.records.MatchRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchDao extends DAOImpl<MatchRecord, fi.istrange.traveler.db.tables.pojos.Match, Record2<Long, Long>> {

    /**
     * Create a new MatchDao without any configuration
     */
    public MatchDao() {
        super(Match.MATCH, fi.istrange.traveler.db.tables.pojos.Match.class);
    }

    /**
     * Create a new MatchDao with an attached configuration
     */
    public MatchDao(Configuration configuration) {
        super(Match.MATCH, fi.istrange.traveler.db.tables.pojos.Match.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<Long, Long> getId(fi.istrange.traveler.db.tables.pojos.Match object) {
        return compositeKeyRecord(object.getLikerCardId(), object.getLikedCardId());
    }

    /**
     * Fetch records that have <code>liker_card_id IN (values)</code>
     */
    public List<fi.istrange.traveler.db.tables.pojos.Match> fetchByLikerCardId(Long... values) {
        return fetch(Match.MATCH.LIKER_CARD_ID, values);
    }

    /**
     * Fetch records that have <code>liked_card_id IN (values)</code>
     */
    public List<fi.istrange.traveler.db.tables.pojos.Match> fetchByLikedCardId(Long... values) {
        return fetch(Match.MATCH.LIKED_CARD_ID, values);
    }

    /**
     * Fetch records that have <code>like_decision IN (values)</code>
     */
    public List<fi.istrange.traveler.db.tables.pojos.Match> fetchByLikeDecision(Boolean... values) {
        return fetch(Match.MATCH.LIKE_DECISION, values);
    }
}
