/*
 * This file is generated by jOOQ.
*/
package fi.istrange.traveler.db.tables;


import fi.istrange.traveler.db.Keys;
import fi.istrange.traveler.db.Public;
import fi.istrange.traveler.db.tables.records.UserPhotoRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserPhoto extends TableImpl<UserPhotoRecord> {

    private static final long serialVersionUID = -784454521;

    /**
     * The reference instance of <code>public.user_photo</code>
     */
    public static final UserPhoto USER_PHOTO = new UserPhoto();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserPhotoRecord> getRecordType() {
        return UserPhotoRecord.class;
    }

    /**
     * The column <code>public.user_photo.username</code>.
     */
    public final TableField<UserPhotoRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(80), this, "");

    /**
     * The column <code>public.user_photo.photo</code>.
     */
    public final TableField<UserPhotoRecord, Long> PHOTO = createField("photo", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.user_photo</code> table reference
     */
    public UserPhoto() {
        this("user_photo", null);
    }

    /**
     * Create an aliased <code>public.user_photo</code> table reference
     */
    public UserPhoto(String alias) {
        this(alias, USER_PHOTO);
    }

    private UserPhoto(String alias, Table<UserPhotoRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserPhoto(String alias, Table<UserPhotoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserPhotoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserPhotoRecord, ?>>asList(Keys.USER_PHOTO__USER_PHOTO_USERNAME_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPhoto as(String alias) {
        return new UserPhoto(alias, this);
    }

    /**
     * Rename this table
     */
    public UserPhoto rename(String name) {
        return new UserPhoto(name, null);
    }
}
